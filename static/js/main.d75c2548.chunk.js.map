{"version":3,"sources":["Components/modalContent.js","Components/Tiles/TechTiles.js","Components/Tiles/PortfolioTiles.js","Components/Tiles/ContactTiles.js","Components/Tiles/AboutDesc.js","Components/Content.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["modalContent","about","title","content","id","desc","tech","name","url","portfolio","project","description","img","siteLink","repoLink","contact","source","TileCard","props","className","src","info","alt","portfolioTile","ListGroup","Item","Media","width","height","Body","Row","target","rel","href","contactTile","Card","Img","variant","Title","AboutDesc","Content","data","TechTiles","map","item","key","Portfolios","PortfolioTiles","console","log","Info","ContactTiles","AboutMe","para","Main","state","show","handleShow","event","setState","ModalContent","handleHide","Jumbotron","fluid","Modal","this","onHide","dialogClassName","aria-labelledby","Header","closeButton","Container","Col","onClick","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d75c2548.chunk.js","sourcesContent":["var modalContent = {\r\n  about: {\r\n    title: \"About Me\",\r\n    content: [\r\n      {\r\n        id: 1,\r\n        desc: \"Caleb Rose is a software engineer based in Seattle, Washington. He has 8 years of professional experience providing web app development and automation.\",\r\n      },\r\n      {\r\n        id: 2,\r\n        desc: \"Caleb is hard-working, self-motivated and passionate when it comes to developing projects. He believes it is important that web applications be robust and accessible from any device.\",\r\n      },\r\n      {\r\n        id: 3,\r\n        desc: \"Caleb is no longer open to inquiries at this time, but you are welcome to checking out his portfolio.\",\r\n        //'For all inquiries and opportunities, please open the contact tab for the best way to contact Caleb.'\r\n      },\r\n    ],\r\n  },\r\n  tech: {\r\n    title: \"Tech Stack\",\r\n    content: [\r\n      {\r\n        id: 1,\r\n        name: \"JavaScript\",\r\n        url: \"/images/javascript.svg\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"React\",\r\n        url: \"/images/react.svg\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Golang\",\r\n        url: \"/images/golang.svg\",\r\n      },\r\n      {\r\n        id: 4,\r\n        name: \"MySQL\",\r\n        url: \"/images/mysql.svg\",\r\n      },\r\n      {\r\n        id: 5,\r\n        name: \"Microsoft Azure\",\r\n        url: \"/images/azure.svg\",\r\n      },\r\n      {\r\n        id: 6,\r\n        name: \"Firebase\",\r\n        url: \"/images/firebase.svg\",\r\n      },\r\n      {\r\n        id: 7,\r\n        name: \"Python\",\r\n        url: \"/images/python.svg\",\r\n      },\r\n      {\r\n        id: 8,\r\n        name: \"C#\",\r\n        url: \"/images/csharp.svg\",\r\n      },\r\n      {\r\n        id: 9,\r\n        name: \"Unreal Engine\",\r\n        url: \"/images/unrealengine.svg\",\r\n      },\r\n    ],\r\n  },\r\n  portfolio: {\r\n    title: \"Portfolio\",\r\n    content: [\r\n      {\r\n        id: 1,\r\n        project: \"SimFBA Interface\",\r\n        description: \"Online Sports Simulation Community\",\r\n        img: \"/images/football.svg\",\r\n        siteLink: \"https://simfba-interface.azurewebsites.net/#/\",\r\n        repoLink: \"https://github.com/CalebRose/simfba-interface\",\r\n      },\r\n      {\r\n        id: 2,\r\n        project: \"SimFBA Football API\",\r\n        description:\r\n          \"API handling College Football and NFL Leagues for SimFBA Community\",\r\n        img: \"/images/football.svg\",\r\n        siteLink: \"https://simfba-interface.azurewebsites.net/#/\",\r\n        repoLink: \"https://github.com/CalebRose/SimFBA\",\r\n      },\r\n      {\r\n        id: 3,\r\n        project: \"SimFBA Basketball API\",\r\n        description:\r\n          \"API handling College Basketball and (soon) NBA Leagues for SimFBA Community\",\r\n        img: \"/images/basketball.svg\",\r\n        siteLink: \"https://simfba-interface.azurewebsites.net/#/\",\r\n        repoLink: \"https://github.com/CalebRose/SimNBA\",\r\n      },\r\n      {\r\n        id: 5,\r\n        project: \"For more...\",\r\n        description: \"Please visit my Github Profile\",\r\n        img: \"/images/more.svg\",\r\n        siteLink: \"https://github.com/CalebRose?tab=repositories\",\r\n        repoLink: \"https://github.com/CalebRose?tab=repositories\",\r\n      },\r\n    ],\r\n  },\r\n  contact: {\r\n    title: \"Contact Me\",\r\n    content: [\r\n      {\r\n        title: \"Email\",\r\n        url: \"mailto:calebrose.mobile@gmail.com\",\r\n        source: \"/images/email.svg\",\r\n      },\r\n      {\r\n        title: \"Resume\",\r\n        url: \"/assets/Caleb_Rose_Resume.pdf\",\r\n        source: \"/images/resume.svg\",\r\n      },\r\n      {\r\n        title: \"Github\",\r\n        url: \"https://www.github.com/CalebRose\",\r\n        source: \"/images/github.svg\",\r\n      },\r\n      {\r\n        title: \"LinkedIn\",\r\n        url: \"https://www.linkedin.com/in/caleb-rose\",\r\n        source: \"/images/linkedin.svg\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport default modalContent;\r\n","import React from \"react\";\r\nimport \"./tiles.css\";\r\n\r\nvar TileCard = props => {\r\n  return (\r\n    <div className=\"img-container\">\r\n      <img className=\"svg\" src={props.info.url} alt={props.info.name} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TileCard;\r\n","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"./tiles.css\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Media from \"react-bootstrap/Media\";\r\n\r\nvar portfolioTile = props => {\r\n  return (\r\n    <ListGroup.Item>\r\n      <Media>\r\n        <img\r\n          width={64}\r\n          height={64}\r\n          className=\"mr-3\"\r\n          src={props.info.img}\r\n          alt=\"\"\r\n        />\r\n        <Media.Body className=\"project\">\r\n          <h5>{props.info.project}</h5>\r\n          <p>{props.info.description}</p>\r\n        </Media.Body>\r\n        <Media.Body className=\"links\">\r\n          <Row>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={props.info.siteLink}\r\n            >\r\n              Site Link\r\n            </a>\r\n          </Row>\r\n          <Row>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={props.info.repoLink}\r\n            >\r\n              Repo Link\r\n            </a>\r\n          </Row>\r\n        </Media.Body>\r\n      </Media>\r\n    </ListGroup.Item>\r\n  );\r\n};\r\n\r\nexport default portfolioTile;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./tiles.css\";\r\n\r\nvar contactTile = props => {\r\n  return (\r\n    <Card className=\"contact-card\">\r\n      <Card.Img\r\n        className=\"contact-image svg\"\r\n        variant=\"top\"\r\n        src={props.info.source}\r\n      />\r\n      <Card.Body>\r\n        <Card.Title>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.info.url}>\r\n            {props.info.title}\r\n          </a>\r\n        </Card.Title>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default contactTile;\r\n","import React from \"react\";\r\n\r\nvar AboutDesc = props => {\r\n  return (\r\n    <div>\r\n      <p>{props.info.desc}</p>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutDesc;\r\n","import React from \"react\";\r\nimport TileCard from \"./Tiles/TechTiles\";\r\nimport PortfolioTiles from \"./Tiles/PortfolioTiles\";\r\nimport ContactTiles from \"./Tiles/ContactTiles\";\r\nimport AboutDesc from \"./Tiles/AboutDesc\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport \"./content.css\";\r\n\r\nvar Content = (props) => {\r\n  if (props.data.title === \"Tech Stack\") {\r\n    const TechTiles = props.data.content.map((item) => (\r\n      <TileCard key={item.id} info={item} />\r\n    ));\r\n    return (\r\n      <div className=\"allCards col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3\">\r\n        {TechTiles}\r\n      </div>\r\n    );\r\n  } else if (props.data.title === \"Portfolio\") {\r\n    const Portfolios = props.data.content.map((item) => (\r\n      <ListGroup>\r\n        <PortfolioTiles key={item.id} info={item} />\r\n      </ListGroup>\r\n    ));\r\n    return <div className=\"portfolios\">{Portfolios}</div>;\r\n  } else if (props.data.title === \"Contact Me\") {\r\n    console.log(props.data);\r\n    const Info = props.data.content.map((item) => (\r\n      <div>\r\n        <ContactTiles key={item.id} info={item} />\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className=\"contact allCards col-xs-6 col-sm-6 col-md-4 col-lg-3 col-xl-3\">\r\n        {Info}\r\n      </div>\r\n    );\r\n  } else if (props.data.title === \"About Me\") {\r\n    console.log(props.data.content);\r\n\r\n    const AboutMe = props.data.content.map((para) => (\r\n      <div>\r\n        <AboutDesc key={para.id} info={para} />\r\n      </div>\r\n    ));\r\n    return <div>{AboutMe}</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Data</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ModalContent from \"./modalContent.js\";\r\nimport Content from \"./Content\";\r\nimport \"./main.css\";\r\n\r\nclass Main extends React.Component {\r\n  state = {\r\n    show: false,\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n  handleShow = (event) => {\r\n    this.setState({ show: true });\r\n    if (event.target.id === \"about\") {\r\n      this.setState({\r\n        title: ModalContent.about.title,\r\n        content: ModalContent.about.content,\r\n      });\r\n    } else if (event.target.id === \"Tech Stack\") {\r\n      this.setState({\r\n        title: ModalContent.tech.title,\r\n        content: ModalContent.tech.content,\r\n      });\r\n    } else if (event.target.id === \"Portfolio\") {\r\n      this.setState({\r\n        title: ModalContent.portfolio.title,\r\n        content: ModalContent.portfolio.content,\r\n      });\r\n    } else if (event.target.id === \"Contact\") {\r\n      this.setState({\r\n        title: ModalContent.contact.title,\r\n        content: ModalContent.contact.content,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleHide = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"main\">\r\n        <Jumbotron fluid>\r\n          <Modal\r\n            show={this.state.show}\r\n            onHide={this.handleHide}\r\n            dialogClassName=\"modal-90w\"\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                {this.state.title}\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Content data={this.state} />\r\n            </Modal.Body>\r\n          </Modal>\r\n        </Jumbotron>\r\n        <Container id=\"header\">\r\n          <Row>\r\n            <Col>\r\n              <h1>Caleb Rose</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <h3>Software Engineer</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <div className=\"options\" onClick={this.handleShow}>\r\n                <p id=\"about\">About</p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"options\" onClick={this.handleShow}>\r\n                <p id=\"Portfolio\">Portfolio</p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"options\" onClick={this.handleShow}>\r\n                <p id=\"Tech Stack\">Tech Stack</p>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"options\">\r\n                <a href=\"https://calebrose.io/blog/\" id=\"blog\">\r\n                  Blog\r\n                </a>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <div className=\"options\" onClick={this.handleShow}>\r\n                <p id=\"Contact\">Contact</p>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./Components/Main\";\r\n\r\nvar App = () => {\r\n  return (\r\n    <div className=\"App\" id=\"main\">\r\n      <Main />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}